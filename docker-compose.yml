version: '3.8'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pongdb}
      POSTGRES_USER: ${POSTGRES_USER:-ponguser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-WillowRapids}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ponguser} -d ${POSTGRES_DB:-pongdb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pong-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"  # HTTP
      - "8001:8001"  # WebSocket
      - "8443:8443"  # HTTPS
    volumes:
      - ./certs:/etc/certs:ro
      - ./backend:/app
    environment:
      - SSL_ENABLED=true
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-pongdb}
      - POSTGRES_USER=${POSTGRES_USER:-ponguser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-WillowRapids}
    networks:
      - pong-network

  frontend:
    image: nginx
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "8001:80"   # HTTP
      - "8444:443"  # HTTPS
    depends_on:
      - backend
    networks:
      - pong-network

networks:
  pong-network:
    driver: bridge

volumes:
  postgres_data:
version: '3'

services:
  prometheus:
    image: prom/prometheus:v2.47.0
    user: "${UID}:${GID}"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - /goinfre/${USER}/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - monitoring_network
      - backend_network  # To access Django app

  alertmanager:
    image: prom/alertmanager:v0.25.0
    user: "${UID}:${GID}"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - /goinfre/${USER}/alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:10.1.0
    user: "${UID}:${GID}"
    volumes:
      - /goinfre/${USER}/grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change this in production
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SMTP_ENABLED=false  # Configure email for alerts in production
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monitoring_network
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:v1.6.1
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - monitoring_network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.1
    user: "${UID}:${GID}"
    environment:
      - DATA_SOURCE_NAME=postgresql://ponguser:WillowRapids@postgres:5432/pongdb?sslmode=disable
    ports:
      - "9187:9187"
    restart: unless-stopped
    networks:
      - monitoring_network
      - backend_network  # To access PostgreSQL

networks:
  monitoring_network:
    driver: bridge
  backend_network:
    driver: bridge